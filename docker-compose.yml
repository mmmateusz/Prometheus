version: '3.7'

services:
    prometheus:
        image: prom/prometheus:v2.37.9
        user: "1000:1000"
        restart: always
        volumes:
            # Config
            - ./prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
            - ./prometheus/prometheus.rules.yml:/etc/prometheus/prometheus.rules.yml
            # Data
            - ./prometheus/prometheus_data/:/prometheus/
        ports:
            - 9090:9090

    alertmanager:
        image: prom/alertmanager:v0.25.0
        restart: always
        volumes:
            # Config
            - ./alertmanager/:/etc/alertmanager/
        ports:
            - 9093:9093
        
    grafana:
        image: grafana/grafana:10.0.3
        restart: always
        environment:
            GF_SECURITY_ADMIN_PASSWORD: panda
        volumes:
            # Config
            - ./grafana/datasource.yml:/etc/grafana/provisioning/datasources/datasource.yml
        depends_on:
            - prometheus
        ports:
            - 3000:3000
    
    nodeexporter:
        image: prom/node-exporter:v1.6.1
        container_name: nodeexporter
        volumes:
            - /proc:/host/proc:ro
            - /sys:/host/sys:ro
            - /:/rootfs:ro
        command:
            - '--path.procfs=/host/proc'
            - '--path.rootfs=/rootfs'
            - '--path.sysfs=/host/sys'
            - '--collector.filesystem.ignored-mount-points=^/(sys|proc|dev|host|etc)($$|/)'
        restart: always
        ports:
            - 9100:9100

    blackbox_exporter:
        image: prom/blackbox-exporter:master
        container_name: blackbox_exporter
        volumes:
            - ./blackbox_exporter/blackbox_exporter.yml:/etc/blackbox_exporter.yml
        command:
            - '--config.file=/etc/blackbox_exporter.yml'
        restart: always
        ports:
            - 9115:9115

    cadvisor:
        image: gcr.io/cadvisor/cadvisor:v0.47.2
        container_name: cadvisor
        volumes:
            - /:/rootfs:ro
            - /var/run:/var/run:rw
            - /sys:/sys:ro
            - /var/lib/docker/:/var/lib/docker:ro
            - /cgroup:/cgroup:ro
        restart: always
        ports:
            - 8080:8080
    
